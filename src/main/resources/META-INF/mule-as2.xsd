<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/as2"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:mule="http://www.mulesoft.org/schema/mule/core"
            xmlns:schemadoc="http://www.mulesoft.org/schema/mule/schemadoc"
            xmlns:http="http://www.mulesoft.org/schema/mule/http"
            targetNamespace="http://www.mulesoft.org/schema/mule/as2"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
                schemaLocation="http://www.mulesoft.org/schema/mule/core/3.3/mule.xsd" />
    <xsd:import namespace = "http://www.mulesoft.org/schema/mule/schemadoc"
                schemaLocation = "http://www.mulesoft.org/schema/mule/schemadoc/3.3/mule-schemadoc.xsd"/>
   	<xsd:import namespace="http://www.mulesoft.org/schema/mule/http"
                schemaLocation="http://www.mulesoft.org/schema/mule/http/3.3/mule-http.xsd"/>
                
    <xsd:annotation>
        <xsd:documentation>AS2 Transport</xsd:documentation>
        <xsd:appinfo>
            <schemadoc:short-name>As2</schemadoc:short-name>
            <schemadoc:page-title>As2 Transport</schemadoc:page-title>
            <schemadoc:transport-features
            receiveEvents="true" dispatchEvents="false" responseEvents="true"
                                          requestEvents="false"
                                          transactions="false" streaming="false">
                <schemadoc:inboundMEPs in-only="true" in-optional-out="true" in-out="true"/>
                <schemadoc:outboundMEPs out-only="true" out-in="true" out-optional-in="true"/>
            </schemadoc:transport-features>
        </xsd:appinfo>
    </xsd:annotation>

    <xsd:element name="connector" type="as2ConnectorType" substitutionGroup="mule:abstract-connector">
        <xsd:annotation>
            <xsd:documentation>
                AS2 Transport
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>


    <xsd:complexType name="as2ConnectorType">
		<xsd:complexContent>
            <xsd:extension base="http:httpConnectorType">
            	<xsd:attribute name="senderId" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            Sender Identifier 
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute> 
            	<xsd:attribute name="keystorePath" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            File system path to the keystore.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>  
            	<xsd:attribute name="keystorePassword" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            Keystore password to open the keystore
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>   
            	<xsd:attribute name="partnerId" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            Partner Identifier
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>                             
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="as2object-to-http-request-transformer" type="mule:abstractTransformerType"
                 substitutionGroup="mule:abstract-transformer">
        <xsd:annotation>
            <xsd:documentation>
                This transformer will create a valid HTTP request using the current message and any AS2 HTTP headers set on the current message.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="filenameParserType">
        <xsd:annotation>
            <xsd:documentation>
                The filenameParser is used when writing files to a directory. The parser will convert the outputPattern attribute to a string using the parser and the current message. The default implmentation used is SimpleFilenameParser.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:complexType>

    <xsd:element name="expression-filename-parser" type="expressionFilenameParserType"
                 substitutionGroup="abstract-filenameParser">
        <xsd:annotation>
            <xsd:documentation>
                The expression-filename-parser element configures the ExpressionFilenameParser, which can use any expression language supported by Mule to construct a file name for the current message. Expressions can be xpath, xquery, ognl, mvel, header, function, and more. 
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="expressionFilenameParserType">
        <xsd:complexContent>
            <xsd:extension base="filenameParserType"/>
        </xsd:complexContent>
    </xsd:complexType>


    <!--
    The following define endpoint elements for this transport. Attributes for the endpoint can be defined at the section
    at the bottom
    -->
    <xsd:element name="inbound-endpoint" type="inboundEndpointType" substitutionGroup="mule:abstract-inbound-endpoint"/>
    <xsd:complexType name="inboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:inboundEndpointType">
                <xsd:attributeGroup ref="http:addressAttributes"/>
                <xsd:attributeGroup ref="http:propertyAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="outbound-endpoint" type="outboundEndpointType" substitutionGroup="mule:abstract-outbound-endpoint"/>
    <xsd:complexType name="outboundEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:outboundEndpointType">
                <xsd:attributeGroup ref="http:addressAttributes"/>
                <xsd:attributeGroup ref="http:propertyAttributes"/>
               	<xsd:attribute name="fileName" type="xsd:string" use="required">
        			<xsd:annotation>
           				<xsd:documentation>It indicates file name used in the AS2 message</xsd:documentation>
            		</xsd:annotation>
        		</xsd:attribute>   
        		<xsd:attribute name="subject" type="xsd:string" use="optional">
        			<xsd:annotation>
           				<xsd:documentation>It indicates the subject of the AS2 message</xsd:documentation>
            		</xsd:annotation>
        		</xsd:attribute>              
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="endpoint" type="globalEndpointType" substitutionGroup="mule:abstract-global-endpoint"/>
    <xsd:complexType name="globalEndpointType">
        <xsd:complexContent>
            <xsd:extension base="mule:globalEndpointType">
                <xsd:attributeGroup ref="http:addressAttributes"/>
                <xsd:attributeGroup ref="http:propertyAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="abstract-filenameParser" abstract="true" type="filenameParserType">
        <xsd:annotation>
            <xsd:documentation>
                The abstract-filenameParser element is a placeholder for filename parser elements. The filename parser is set on the connector used when writing files to a directory. The parser will convert the outputPattern attribute to a string using the parser and the current message. The default implmentation used is expression-filename-parser, but you can also specify a custom-filename-parser. 
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

</xsd:schema>
